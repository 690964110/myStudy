*{
    margin: 0;
    padding: 0;
}
/* IE6混杂盒模型和正常盒模型的区别 */
/* 
    正常情况下，盒子的计算规则
    boxWidth = width + border * 2 + padding * 2;
    IE6混杂盒模型
    boxWidth = width;
        求内容区宽度
        contentWidth = boxWidth - border * 2 - padding * 2;
*/
/* ---------IE6混杂盒模型的触发规则--------------- */
/* 
    IE6混杂盒模型的触发规则
    box-sizing: border-box;
    content-box是默认值，正常盒模型
*/
/* div{
    width: 100px;
    height: 100px;
    background-color: red;
    border: 10px;
    padding: 10px;
    box-sizing: border-box;
} */
/* ------------宽度不固定，但是内边距固定----------------------- */
 /* .wrapper{
     width: 100%;
     height: 300px;
     border: 1px solid black;
 }
 .content:first-of-type{
    float: left;
    width: 50%;
    height: 100%;
    background-color: yellow;
    box-sizing: border-box; 
    border: 20px solid red;

 }
 .content:last-of-type{
     float: left;
     width: 50%;
     height: 100%;
     background-color: #0ff;
 } */
 /* ------------输入框，需要有一个固定内边距----------------------- */
 /* input{
     width: 300px;
     height: 40px;
     padding: 10px;
     box-sizing: border-box;
 } */
  /* ------------用户自定义，后端传宽度，已知padding和border------------- */
  /* 
    和前两个场景相似
  */

/* ------------手机端做横向列表------------ */
/* 
    overflow: hidden; 滚动条隐藏
    overflow: auto;这个属性在手机端开发的时候设置这个属性，可以直接横向滚动，多余隐藏

*/
/* ------------将div的大小变成可拖拽------------ */
/* 
    resize:both;可以让div变的可拖拽
    但是必须配合overflow：scroll才能生效
*/
div{
    width: 300px;
    height: 300px;
    border: 1px solid #000;
    resize: both;
    overflow: scroll;
}
